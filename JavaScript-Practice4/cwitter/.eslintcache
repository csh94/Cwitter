[{"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\index.js":"1","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\App.js":"2","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Router.js":"3","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Auth.js":"4","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Home.js":"5","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\fbase.js":"6","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Navigation.js":"7","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Profile.js":"8","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Cweet.js":"9"},{"size":237,"mtime":1610852075182,"results":"10","hashOfConfig":"11"},{"size":1119,"mtime":1614674030456,"results":"12","hashOfConfig":"11"},{"size":1122,"mtime":1614568634147,"results":"13","hashOfConfig":"11"},{"size":2378,"mtime":1613733364049,"results":"14","hashOfConfig":"11"},{"size":3796,"mtime":1613732716978,"results":"15","hashOfConfig":"11"},{"size":691,"mtime":1613733315233,"results":"16","hashOfConfig":"11"},{"size":319,"mtime":1613736371894,"results":"17","hashOfConfig":"11"},{"size":1724,"mtime":1614673198842,"results":"18","hashOfConfig":"11"},{"size":2105,"mtime":1613472597691,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"cyhygx",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\index.js",["42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from './fbase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["43","44"],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\App.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Router.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Auth.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Home.js",["45"],"import Cweet from \"components/Cweet\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Home = ({userObj}) => {\r\n    const [cweet, setCweet] = useState(\"\");\r\n    const [cweets, setCweets] = useState([]);\r\n    const [attachment, setAttachment] = useState();\r\n    //컴포넌트가 mount 될때 우리는 getCweets를 실행하지.\r\n    /*const getCweets = async() => {\r\n        const dbCweets = await dbService.collection(\"cweets\").get();\r\n        dbCweets.forEach((document) => {\r\n            const cweetObject = {\r\n                ...document.data(),\r\n                id: document.id,\r\n            };\r\n            setCweets(prev => [cweetObject, ...prev])\r\n        });\r\n    };*/\r\n    useEffect(() => {\r\n        //이건 구식 방식이야. getCweets();\r\n        //아래껀 스냅샷방식으로 리얼타임!\r\n        /* onsnapshot 은 데이터베이스에 무슨일이 있을때 알림을 받음\r\n        새로운 스냅샷을 받을 때 배열을 만들고, 그다음 state에 배열을 넣음. */ \r\n        dbService.collection(\"cweets\").onSnapshot(snapshot => {\r\n            const cweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setCweets(cweetArray);\r\n        });\r\n    }, []);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const cweetObj = {\r\n            text: cweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"cweets\").add(cweetObj);\r\n        setCweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {target:{value}} = event;\r\n        setCweet(value);\r\n    };\r\n    //event로부터 라는 의미지. 즉, event 안에 있는 target안에 있는 value를 달라.\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    //event 안에서 target 안으로 가서 파일을 받아오는 것을 의미\r\n    const onClearAttachment = () => setAttachment(null);\r\n    return (\r\n        <div>    \r\n            <form onSubmit={onSubmit}>\r\n                <input value={cweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\r\n                <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n                <input type=\"submit\" value=\"Cweet\" />\r\n                {attachment && (\r\n                    <div>\r\n                        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                        <button onClick={onClearAttachment}>Clear</button>\r\n                    </div>    \r\n                )}\r\n            </form>\r\n            <div>\r\n                {cweets.map((cweet) => (\r\n                    <Cweet \r\n                    key={cweet.id} \r\n                    cweetObj={cweet} \r\n                    isOwner={cweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\fbase.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Navigation.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Profile.js",["46","47","48"],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Cweet.js",["49"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Cweet = ({cweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newCweet, setNewCweet] = useState(cweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this cweet?\");\r\n        if(ok){\r\n            await dbService.doc(`cweets/${cweetObj.id}`).delete();\r\n            await storageService.refFromURL(cweetObj.attachmentUrl).delete();\r\n        } \r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`cweets/${cweetObj.id}`).update({\r\n            text: newCweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewCweet(value);\r\n    };\r\n    return (\r\n    <div>\r\n        {\r\n            editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Edit your cweet\" \r\n                        value={newCweet} \r\n                        required \r\n                        onChange={onChange}\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Cweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n            <> \r\n                <h4>{cweetObj.text}</h4>\r\n                {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\r\n                {isOwner && (\r\n                    <> \r\n                        <button onClick={onDeleteClick}>Delete Cweet</button>\r\n                        <button onClick={toggleEditing}>Edit Cweet</button>\r\n                    </>\r\n                )}\r\n            </>\r\n            )\r\n        }\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Cweet;",{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":13},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":81,"column":25,"nodeType":"60","endLine":81,"endColumn":76},{"ruleId":"50","severity":1,"message":"61","line":1,"column":23,"nodeType":"52","messageId":"53","endLine":1,"endColumn":32},{"ruleId":"50","severity":1,"message":"62","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":26},{"ruleId":"63","severity":1,"message":"64","line":5,"column":1,"nodeType":"65","endLine":56,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":48,"column":44,"nodeType":"60","endLine":48,"endColumn":107},"no-unused-vars","'fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'dbService' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]