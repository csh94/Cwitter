[{"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\index.js":"1","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\App.js":"2","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Router.js":"3","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Auth.js":"4","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Home.js":"5","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\fbase.js":"6","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Navigation.js":"7","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Profile.js":"8","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Cweet.js":"9","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\CweetFactory.js":"10","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\AuthForm.js":"11"},{"size":259,"mtime":1615894696007,"results":"12","hashOfConfig":"13"},{"size":1159,"mtime":1615892843451,"results":"14","hashOfConfig":"13"},{"size":1491,"mtime":1615894323032,"results":"15","hashOfConfig":"13"},{"size":1483,"mtime":1615894629986,"results":"16","hashOfConfig":"13"},{"size":1781,"mtime":1615894442373,"results":"17","hashOfConfig":"13"},{"size":691,"mtime":1613733315233,"results":"18","hashOfConfig":"13"},{"size":1257,"mtime":1615893910218,"results":"19","hashOfConfig":"13"},{"size":2120,"mtime":1615894551820,"results":"20","hashOfConfig":"13"},{"size":2614,"mtime":1615894068088,"results":"21","hashOfConfig":"13"},{"size":3470,"mtime":1615894896693,"results":"22","hashOfConfig":"13"},{"size":1787,"mtime":1615893813943,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"cyhygx",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"27"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\index.js",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport fbase from './fbase';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["53","54"],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\App.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Router.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Auth.js",["55"],"import AuthForm from \"components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target: {name}} = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon\r\n                icon={faTwitter}\r\n                color={\"#04AAFF\"}\r\n                size=\"3x\"\r\n                style={{ marginBottom: 30 }}\r\n            />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Home.js",["56"],"import Cweet from \"components/Cweet\";\r\nimport CweetFactory from \"components/CweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    \r\n    const [cweets, setCweets] = useState([]);\r\n    \r\n    //컴포넌트가 mount 될때 우리는 getCweets를 실행하지.\r\n    /*const getCweets = async() => {\r\n        const dbCweets = await dbService.collection(\"cweets\").get();\r\n        dbCweets.forEach((document) => {\r\n            const cweetObject = {\r\n                ...document.data(),\r\n                id: document.id,\r\n            };\r\n            setCweets(prev => [cweetObject, ...prev])\r\n        });\r\n    };*/\r\n    useEffect(() => {\r\n        //이건 구식 방식이야. getCweets();\r\n        //아래껀 스냅샷방식으로 리얼타임!\r\n        /* onsnapshot 은 데이터베이스에 무슨일이 있을때 알림을 받음\r\n        새로운 스냅샷을 받을 때 배열을 만들고, 그다음 state에 배열을 넣음. */ \r\n        dbService.collection(\"cweets\").onSnapshot(snapshot => {\r\n            const cweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setCweets(cweetArray);\r\n        });\r\n    }, []);\r\n   \r\n    return (\r\n        <div className=\"container\">   \r\n            <CweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {cweets.map((cweet) => (\r\n                    <Cweet \r\n                    key={cweet.id} \r\n                    cweetObj={cweet} \r\n                    isOwner={cweet.creatorId === userObj.uid} \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\fbase.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Navigation.js",[],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\routes\\Profile.js",["57","58","59"],"import { authService, dbService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    //어떻게 DB 데이터를 필터링하는지를 보여주고싶었어.\r\n    /* const getMyCweets = async() => {\r\n        const cweets = await dbService\r\n        .collection(\"cweets\")\r\n        .where(\"creatorId\", \"==\", userObj.uid)\r\n        .orderBy(\"createrAt\")\r\n        .get();\r\n        console.log(cweets.docs.map((doc) => doc.data()));\r\n        console.log(userObj.displayName);\r\n    };\r\n    useEffect(() => {\r\n        getMyCweets();\r\n    }, []); */\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n            </span>\r\n        </div>\r\n    );\r\n};","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\Cweet.js",["60"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Cweet = ({cweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newCweet, setNewCweet] = useState(cweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this cweet?\");\r\n        if(ok){\r\n            await dbService.doc(`cweets/${cweetObj.id}`).delete();\r\n            await storageService.refFromURL(cweetObj.attachmentUrl).delete();\r\n        } \r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`cweets/${cweetObj.id}`).update({\r\n            text: newCweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewCweet(value);\r\n    };\r\n    return (\r\n        <div className=\"nweet\">\r\n        {\r\n            editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Edit your cweet\" \r\n                        value={newCweet} \r\n                        required \r\n                        autoFocus\r\n                        onChange={onChange}\r\n                        className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                            Cancel\r\n                        </span>\r\n                </>\r\n            ) : (\r\n            <> \r\n                <h4>{cweetObj.text}</h4>\r\n                {cweetObj.attachmentUrl && <img src={cweetObj.attachmentUrl} />}\r\n                {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                      <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n            </>\r\n            )\r\n        }\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Cweet;","C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\CweetFactory.js",["61"],"C:\\Users\\11\\Desktop\\JavaScript Practice\\JavaScript-Practice4\\cwitter\\src\\components\\AuthForm.js",[],{"ruleId":"62","severity":1,"message":"63","line":4,"column":8,"nodeType":"64","messageId":"65","endLine":4,"endColumn":13},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":3,"column":17,"nodeType":"64","messageId":"65","endLine":3,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":3,"column":21,"nodeType":"64","messageId":"65","endLine":3,"endColumn":35},{"ruleId":"62","severity":1,"message":"72","line":1,"column":23,"nodeType":"64","messageId":"65","endLine":1,"endColumn":32},{"ruleId":"62","severity":1,"message":"73","line":2,"column":17,"nodeType":"64","messageId":"65","endLine":2,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":5,"column":1,"nodeType":"76","endLine":67,"endColumn":3},{"ruleId":"77","severity":1,"message":"78","line":54,"column":44,"nodeType":"79","endLine":54,"endColumn":80},{"ruleId":"77","severity":1,"message":"78","line":79,"column":17,"nodeType":"79","endLine":84,"endColumn":19},"no-unused-vars","'fbase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useState' is defined but never used.","'storageService' is defined but never used.","'dbService' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]